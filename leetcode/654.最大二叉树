# 654.最大二叉树
给定一个不重复的整数数组 nums 。 最大二叉树 可以用下面的算法从 nums 递归地构建:
创建一个根节点，其值为 nums 中的最大值。
递归地在最大值左边的子数组前缀上构建左子树。
递归地在最大值右边的子数组后缀上构建右子树。
返回nums构建的最大二叉树 。
[题目链接](https://leetcode.cn/problems/maximum-binary-tree/)
```c++
class Solution {
public:
    TreeNode* construct(vector<int>& nums, int left, int right) {
        // 递归结束条件
        if (left > right) {
            return nullptr;
        }
        int maxValueIndex = left; // 最大值索引
        for (int i = left; i <= right; ++i) {
            if (nums[i] > nums[maxValueIndex]) {
                maxValueIndex = i;
            }
        }
        TreeNode* root = new TreeNode(nums[maxValueIndex]);
        root->left = construct(nums, left, maxValueIndex - 1);
        root->right = construct(nums, maxValueIndex + 1, right);
        return root;
    }
    TreeNode* constructMaximumBinaryTree(vector<int>& nums) {
        return construct(nums, 0, nums.size() - 1);
    }
};
```